name: Build and test CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "30 8 * * *"

# From https://github.com/actions/starter-workflows/pull/47
jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, macOS-latest, windows-latest]
        #os: [ubuntu-20.04, ubuntu-18.04, macOS-latest]
        python-version: [3.8]
        #build-type: [Release, Debug]
        build-type: [Release]
      fail-fast: false

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        echo PATH $PATH
        ls -lh ${pythonLocation}
        which python
        python -m pip -v install --upgrade pip
        python -m pip -v install numpy scipy
        python -V
        python -c "import sys; print(sys.path)"

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      shell: bash
      run: |
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        echo PATH $PATH
        echo pythonLocation ${pythonLocation}
        ls -lh ${pythonLocation}
        which python
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DPython3_ROOT_DIR=${pythonLocation}
        cat CMakeCache.txt

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{ matrix.build-type }} --parallel 2

    - name: List files
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: find .

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build-type }} --parallel 2 --output-on-failure



