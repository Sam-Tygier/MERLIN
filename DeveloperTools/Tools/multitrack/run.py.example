#!/usr/bin/env python3

# Merlin++: C++ Class Library for Charged Particle Accelerator Simulations
# Copyright (c) 2001-2019 The Merlin++ developers
# This file is covered by the terms the GNU GPL version 2, or (at your option) any later version, see the file COPYING

import os
import tm, curves, common
import madx, merlin, merlin_madinterface

common.mkdir("plots")

run_settings = {
	"energy":7000,
	"particle": "proton",
	# if madx in not in your $PATH, add the full path to the executable
	"madx_command": "madx",
}

# Select trackers to compare
trackers = [
#{"name":"madx_ptc", "f":madx.track_particles, "settings":{"mad_mode":"ptc"}},
{"name":"madx_thin", "f":madx.track_particles, "settings":{"mad_mode":"thin"}},
#{"name":"merlin", "f":merlin.track_particles},
{"name":"merlin_madinterface_sym", "f":merlin_madinterface.track_particles, "settings":{"int_mode":"symplectic"}},
#{"name":"merlin_madinterface_sym_ef", "f":merlin_madinterface.track_particles, "settings":{"int_mode":"symplectic_ef"}},
#{"name":"merlin_madinterface_tran", "f":merlin_madinterface.track_particles, "settings":{"int_mode":"transport"}},
#{"name":"merlin_alpha_thin", "f":merlin_madinterface.track_particles, "settings":{"int_mode":"thin", "particle":"alpha"}},
]

# select elements to use
elements = [
{"type":"drift", "len":3},
{"type":"quad", "len":2, "k1":0.2},
#{"type":"sex", "len":2, "k2":0.2},
#{"type":"oct", "len":2, "k3":0.2},
#{"type":"sbend", "len":5, "angle":2},
#{"type":"sbend", "len":5, "angle":1, "k1":0.2},
{"type":"sbend", "len":5, "angle":2, "k2":0.2},
#{"type":"vkick", "len":0.5, "vkick":1e-3},
#{"type":"vkick", "len":0, "vkick":1e-3},
#{"type":"hkick", "len":0.5, "hkick":1e-3},
#{"type":"hkick", "len":0, "hkick":1e-3},
#{"type":"hkick", "len":2, "hkick":0},
#{"type":"multipole", "knl":[0,2], "ksl":[]},
#{"type":"multipole", "knl":[], "ksl":[0,2]}, # not yet implemented in madinterface
#{"type":"multipole", "knl":[0,1,3], "ksl":[]},
#{"type":"multipole", "knl":[0,0,3], "ksl":[]},
#{"type":"multipole", "knl":[0,0,0,4], "ksl":[]},
#{"type":"multipole", "knl":[0,0,0,0,4], "ksl":[]},
]

# Calculate and plot transfer matrices
tm.run_transfermatrix(run_settings, trackers, elements)

# Calculate and plot curves for higher order elements
curves.run_curves(run_settings, trackers, elements)
